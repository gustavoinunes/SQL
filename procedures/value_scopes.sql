CREATE OR REPLACE PROCEDURE OTIMIZA.SH_ALCADA_PR (
V_ACAO varchar2,
V_SESSAO integer,
V_PROGRAMA varchar2,
V_ARQUIVO varchar2,
V_DT_LOG timestamp := current_timestamp
) IS
BEGIN
	IF V_ACAO = 'PLI' THEN
		DELETE FROM otimiza.SH_ALCADA WHERE STATUS = 'VISUALIZACAO' AND (SESSAO = V_SESSAO OR V_SESSAO IN (SELECT SESSAO FROM OTM_LOG_ACESSOS WHERE ACESSO_FIM IS NOT NULL));	
		FOR K IN (
			
				SELECT
				TREL_DEM.ID ID_REL,
				TALCADA.ID ID_ALC,
				NVL(NVL(TPARAMETROS_ALCADA.ID,TPARAMETROS_ALCADA2.ID),TPARAMETROS_ALCADA3.ID) ID_PAR_ALC,
				TUSUARIOS_ALCADA.ID ID_USU_ALC,
				TUSUARIOS.ID ID_USU,
				TCTA_CTAB.ID ID_CTA,
				TCC.ID ID_CC,
				X.EMPRESA || ' - ' || TEMPRESAS.NOME_FAN EMPRESA,
				X.CODIGO || ' - ' || TREL_DEM.DESCRICAO RELATORIO,
				X.SEQ,
				TO_DATE('01/' || X.MES || '/' || X.ANO,'DD/MM/YYYY') PERIODO,
				X.MES,
				X.ANO,
				X.NIVEL,
				X.USUARIO,
				X.CTA_CTAB || ' - ' || TCTA_CTAB.DESCRICAO CONTA_CONTABIL,
				X.CEN_CST || ' - ' || TCC.DESCRICAO CENTRO_CUSTO,
				ROUND(X.VALOR,2) VALOR_IMP,
				ROUND(NVL(NVL(NVL(TPARAMETROS_ALCADA.SALDO,TPARAMETROS_ALCADA2.SALDO),TPARAMETROS_ALCADA3.SALDO),0) + 
				(X.VALOR - NVL(NVL(NVL(TPARAMETROS_ALCADA.VALOR,TPARAMETROS_ALCADA2.VALOR),TPARAMETROS_ALCADA3.VALOR),0)),2) SALDO_IMP,
				ROUND(NVL(NVL(NVL(TPARAMETROS_ALCADA.VALOR,TPARAMETROS_ALCADA2.VALOR),TPARAMETROS_ALCADA3.VALOR),0),2) VALOR_SIS,
				ROUND(NVL(NVL(NVL(TPARAMETROS_ALCADA.SALDO,TPARAMETROS_ALCADA2.SALDO),TPARAMETROS_ALCADA3.SALDO),0),2) SALDO_SIS,
				X.CONTEUDO,
				X.ARQUIVO,
				X.CTA_CTAB,
				X.CEN_CST
				
				FROM (	SELECT
						otm_split(CONTEUDO,chr(59),1) EMPRESA,
						otm_split(CONTEUDO,chr(59),2) CODIGO,
						otm_split(CONTEUDO,chr(59),3) SEQ,
						otm_split(CONTEUDO,chr(59),4) MES,
						otm_split(CONTEUDO,chr(59),5) ANO,
						otm_split(CONTEUDO,chr(59),6) NIVEL,
						otm_split(CONTEUDO,chr(59),7) USUARIO,
						otm_split(CONTEUDO,chr(59),8) CTA_CTAB,
						otm_split(CONTEUDO,chr(59),9) CEN_CST,
						otm_split(CONTEUDO,chr(59),10) VALOR,
						CONTEUDO,
						ARQUIVO
						FROM otimiza.OTM_DADOS_EXTERNOS
						WHERE OTM_DADOS_EXTERNOS.SESSAO = V_SESSAO AND OTM_DADOS_EXTERNOS.ARQUIVO = V_ARQUIVO
					) X
				
				LEFT JOIN focco3i.TREL_DEM ON TREL_DEM.CODIGO = X.CODIGO
				LEFT JOIN focco3i.TALCADA ON TALCADA.TREL_DEM_ID = TREL_DEM.ID AND TALCADA.SEQ = X.SEQ AND TALCADA.EMPR_ID = X.EMPRESA
				LEFT JOIN focco3i.TEMPRESAS ON TEMPRESAS.ID = TALCADA.EMPR_ID
				LEFT JOIN focco3i.TUSUARIOS ON TUSUARIOS.LOGIN = X.USUARIO
				LEFT JOIN focco3i.TUSUARIOS_ALCADA ON TUSUARIOS_ALCADA.TALC_ID = TALCADA.ID AND TUSUARIOS_ALCADA.USU_ID = TUSUARIOS.ID AND TUSUARIOS_ALCADA.NIVEL = X.NIVEL
				LEFT JOIN focco3i.TCTA_CTAB ON TCTA_CTAB.COD_RED = X.CTA_CTAB
				LEFT JOIN focco3i.TCC ON TCC.COD = X.CEN_CST
				LEFT JOIN focco3i.TPARAMETROS_ALCADA ON TPARAMETROS_ALCADA.PERIODO = TO_DATE('01/' || X.MES || '/' || X.ANO,'DD/MM/YYYY')
													AND TPARAMETROS_ALCADA.TUSUALC_ID = TUSUARIOS_ALCADA.ID
													AND TPARAMETROS_ALCADA.CTA_CTAB_ID = TCTA_CTAB.ID
													AND TPARAMETROS_ALCADA.CC_ID = TCC.ID
				
				LEFT JOIN focco3i.TPARAMETROS_ALCADA TPARAMETROS_ALCADA2 ON TPARAMETROS_ALCADA2.PERIODO = TO_DATE('01/' || X.MES || '/' || X.ANO,'DD/MM/YYYY')
													 					AND TPARAMETROS_ALCADA2.TUSUALC_ID = TUSUARIOS_ALCADA.ID
													 					AND ((TPARAMETROS_ALCADA2.CTA_CTAB_ID = TCTA_CTAB.ID AND TCC.ID IS NULL)
													 					 OR (TPARAMETROS_ALCADA2.CC_ID = TCC.ID AND TCTA_CTAB.ID IS NULL))
													 					
				LEFT JOIN focco3i.TPARAMETROS_ALCADA TPARAMETROS_ALCADA3 ON TPARAMETROS_ALCADA2.PERIODO = TO_DATE('01/' || X.MES || '/' || X.ANO,'DD/MM/YYYY')
													 					AND TPARAMETROS_ALCADA2.TUSUALC_ID = TUSUARIOS_ALCADA.ID
													 					AND TCTA_CTAB.ID IS NULL
													 					AND TCC.ID IS NULL
		
			) LOOP
				DECLARE V_MENSAGEM varchar2(500);
				BEGIN
					IF K.ID_REL IS NULL THEN V_MENSAGEM := 'ERRO - relatório inexistente';
						ELSIF K.ID_ALC IS NULL THEN V_MENSAGEM := 'ERRO - sequencia inexistente';
						ELSIF K.ID_USU IS NULL THEN V_MENSAGEM := 'ERRO - usuario não existe';
						ELSIF K.ID_USU_ALC IS NULL THEN V_MENSAGEM := 'ERRO - usuario fora da árvore ou em outro nível';
						ELSIF (K.ID_CTA IS NULL AND K.CTA_CTAB IS NOT NULL) THEN V_MENSAGEM := 'ERRO - conta contábil inexistente';
						ELSIF (K.ID_CC IS NULL AND K.CEN_CST IS NOT NULL) THEN V_MENSAGEM := 'ERRO - centro de custo inexistente';
						ELSIF K.SALDO_IMP < 0 THEN V_MENSAGEM := 'ERRO - valor importado está menor que o consumido';
						ELSIF K.ID_PAR_ALC IS NULL THEN V_MENSAGEM := 'OK - alçada nova'; 
						ELSE V_MENSAGEM:= 'OK - alçada existente';
					END IF;
					INSERT INTO otimiza.SH_ALCADA (ID,SESSAO,DATA_LOG,PROGRAMA,ID_ALC,ID_PAR_ALC,ID_USU_ALC,ID_USU,ID_CTA,ID_CC,EMPRESA,RELATORIO,SEQ,PERIODO,MES,ANO,NIVEL,USUARIO,CONTA_CONTABIL,CENTRO_CUSTO,VALOR_IMP,SALDO_IMP,VALOR_SIS,SALDO_SIS,MENSAGEM,CONTEUDO,ARQUIVO,STATUS)
					VALUES (SH_ALCADA_ID.NEXTVAL,V_SESSAO,V_DT_LOG,V_PROGRAMA,K.ID_ALC,K.ID_PAR_ALC,K.ID_USU_ALC,K.ID_USU,K.ID_CTA,K.ID_CC,K.EMPRESA,K.RELATORIO,K.SEQ,K.PERIODO,K.MES,K.ANO,K.NIVEL,K.USUARIO,K.CONTA_CONTABIL,K.CENTRO_CUSTO,K.VALOR_IMP,K.SALDO_IMP,K.VALOR_SIS,K.SALDO_SIS,V_MENSAGEM,K.CONTEUDO,K.ARQUIVO,'VISUALIZACAO');
				END;
			END LOOP;
		DELETE FROM otimiza.OTM_DADOS_EXTERNOS WHERE SESSAO = V_SESSAO AND ARQUIVO = V_ARQUIVO;
	ELSIF V_ACAO = 'PLF' THEN
		FOR K IN (SELECT * FROM SH_ALCADA WHERE STATUS = 'VISUALIZACAO' AND SESSAO = V_SESSAO AND PROGRAMA = V_PROGRAMA AND MENSAGEM LIKE 'OK - %' ORDER BY ID_ALC,ID_PAR_ALC,SEQ,NIVEL) LOOP
			UPDATE otimiza.SH_ALCADA SET STATUS = 'IMPORTADO' WHERE ID = K.ID;
			IF K.ID_PAR_ALC IS NULL THEN 
				BEGIN
					INSERT INTO focco3i.TPARAMETROS_ALCADA (ID,CC_ID,CTA_CTAB_ID,PERIODO,SALDO,TP_VALOR,TUSUALC_ID,VALOR,VALOR_REAL) 
					VALUES (focco3i.SEQ_ID_TPARAMETROS_ALCADA.nextval,K.ID_CC,K.ID_CTA,K.PERIODO,K.SALDO_IMP,'V',K.ID_USU_ALC,K.VALOR_IMP,K.VALOR_IMP);
				END;
			ELSE UPDATE focco3i.TPARAMETROS_ALCADA SET SALDO = K.SALDO_IMP, VALOR = K.VALOR_IMP, VALOR_REAL = K.VALOR_IMP WHERE ID = K.ID_PAR_ALC;
			END IF;
			COMMIT;
		END LOOP;
	END IF;
	COMMIT;
END;
